# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  branches:
    include:
    - main
  paths:
    include:
    - petstore/petstoreproductservice/*

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'eca1cc5c-10ab-4570-886e-84d8a53b3f44'
  imageRepository: 'petstoreproductservice'
  containerRegistry: 'nebulanomiazurepetstorecr.azurecr.io'
  dockerfilePath: 'petstore/petstoreproductservice/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: '$(crImagePullSecretGlobalV2)'

stages:
- stage: Build
  displayName: Build stage
  jobs: 
  - job: Build
    displayName: Build App
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: echo -n -e "{\"version\":\"$(Build.BuildNumber) - $(tag)\"}" > petstore/petstoreproductservice/src/main/resources/version.json

    - task: Maven@4
      continueOnError: true 
      displayName: Build Spring Boot Jar
      inputs:
        mavenPomFile: 'petstore/petstoreproductservice/pom.xml'
        mavenOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.11'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: 'petstore/petstoreproductservice/target/surefire-reports/TEST-*.xml'
        codeCoverageToolOption: 'jaCoCo'
        goals: 'package'
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          latest
          
    - upload: manifests
      artifact: manifests

- stage: Deploy
  displayName: Deploy Stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy App
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'Development'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@1
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              kubernetesServiceConnection: nebulanomi-akscluster-ingress-petstoreservices
              namespace: ingress-petstoreservices
              manifests: |
                $(Pipeline.Workspace)/manifests/petstoreproductservice-deployment-everything-enabled.yml
                $(Pipeline.Workspace)/manifests/petstoreproductservice-service-everything-enabled.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)
